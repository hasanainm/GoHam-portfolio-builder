@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInLeftButton {
  0% {
    opacity: 0;
    transform: translateX(-3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRightButton {
  0% {
    opacity: 0;
    transform: translateX(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  /* font-size: 10px; - "bad practice", should not be pixels because by doing so you will override the browser font size setting that the user can manually change in the settings, for example when the user can not see so good. The user will be able to change the default font size however our root font size will remain unaffected.  */
  /* change to percentage will translate to a percentage of the font size given by the browser. By default the page will set to 16px. So if we put 100% this would mean that the root font size would be 16 pixel if the user doesnt change anything and if the user does change the default font size, lets say to 18px then the root font size will be 18 px. If you dont want it to be 16px by default all you have to do is divide what you want by 16px...so 10/16 = .625. 62.5%. 62.5 * 16 = 10px  With this you allow the user to actually zoom in on the page automatically, not only to change the font size but to also zoom in on the page */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* fixes the mini shake the happens which makes the element go up a little */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    /* displaying property as a block occupies the entire width that they have available and more importantly, they create line breaks from and after them */
    display: block;
    font-size: 6rem;
    font-weight: 400;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */ }
  .heading-primary--sub {
    font-family: 'Courgette', cursive;
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: .5rem;
    animation: moveInRight 1s ease-out; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.nbbtn:link, .nbbtn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: .5em;
  transition: all .2s;
  position: relative;
  font-size: 1.6rem;
  cursor: pointer;
  color: #777; }

.nbbtn:hover {
  transform: translateY(-3px);
  text-decoration: none;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.nbbtn:active {
  transform: translateY(-1px);
  box-shadow: 0 1rem 0.5rem rgba(0, 0, 0, 0.2); }

.nbbtn--white {
  background-color: #fff;
  color: #777; }

.nbbtn--animated-left {
  animation: moveInLeftButton .5s ease-out .75s;
  /* 0% styles on @keyframes moveInButton will be applied before the animation starts */
  animation-fill-mode: backwards; }

.nbbtn--animated-right {
  animation: moveInRightButton .5s ease-out .75s;
  /* 0% styles on @keyframes moveInButton will be applied before the animation starts */
  animation-fill-mode: backwards; }

* {
  /* setting it to border box so the padding stays within the box model and doesnt make the width bigger */
  box-sizing: border-box; }

h1 {
  font-weight: bold;
  margin: 0; }

p {
  font-size: 14px;
  font-weight: 100;
  line-height: 20px;
  letter-spacing: 0.5px;
  margin: 20px 0 30px; }

span {
  font-size: 12px; }

a {
  color: #333;
  font-size: 14px;
  text-decoration: none;
  margin: 15px 0; }

.non-BS-Modal {
  margin-right: 20%; }

.nonBS-container {
  background-color: white;
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.2);
  /* have some positioned absolute within it */
  position: relative;
  overflow: hidden;
  width: 768px;
  min-height: 400px; }

.form-container form {
  background-color: white;
  display: flex;
  flex-direction: column;
  padding: 0 50px;
  height: 100%;
  justify-content: center;
  align-items: center;
  text-align: center; }

.form-container input {
  background: #eee;
  border: none;
  padding: 12px 15px;
  margin: 8px 0;
  width: 100%; }

.signbutton {
  color: white; }

button {
  border-radius: 20px;
  border: 1px solid black;
  background: white;
  color: black;
  font-size: 12px;
  font-weight: bold;
  padding: 12px 45px;
  letter-spacing: 1px;
  text-transform: uppercase;
  /* for adding a expanding effect. Need to use pseudo class later */
  transition: transform 50ms ease-in; }

button:active {
  transform: scale(0.95);
  transition: all .2s; }

button:focus {
  outline: none; }

button.ghost {
  background: transparent;
  border-color: #eee; }

.form-container {
  position: absolute;
  top: 0;
  height: 100%;
  /* transition important for smooth slide over instead a flick over */
  transition: all 0.6s ease-in-out; }

.sign-in-container {
  /* inheritance going here since it is the child element of the form container element */
  left: 0;
  /* sign in container will extend out to 50% absolute */
  width: 50%;
  z-index: 2; }

.sign-up-container {
  left: 0;
  width: 50%;
  opacity: 0;
  z-index: 1; }

.overlay-container {
  position: absolute;
  top: 0;
  left: 50%;
  width: 50%;
  height: 100%;
  overflow: hidden;
  transition: transform 0.6s ease-in-out;
  z-index: 100; }

.overlay {
  background: #ff416c;
  background: linear-gradient(to right, #f0dfc8, #ebbda3) no-repeat 0 0/cover;
  color: #fff;
  position: relative;
  left: -100%;
  height: 100%;
  width: 200%;
  transform: translateX(0);
  transition: transform 0.6s ease-in-out; }

.overlay-panel {
  position: absolute;
  top: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0 40px;
  height: 100%;
  width: 50%;
  text-align: center;
  transform: translateX(0);
  transition: transform 0.6s ease-in-out; }

.overlay-right {
  right: 0;
  transform: translateX(0); }

.overlay-left {
  /* this will help it come from the left once we set the translateX to 0 in js */
  transform: translateX(-20%); }

/* Animations */
.nonBS-container.right-panel-active .sign-in-container {
  /* once the class is added we want to style sign in container by moving to the right a 100% */
  transform: translateX(100%); }

/* Move overlay to left */
.nonBS-container.nonBS-container.right-panel-active .overlay-container {
  transform: translateX(-100%); }

/* Bring sign up over sign in from the left */
.nonBS-container.right-panel-active .sign-up-container {
  transform: translate(100%);
  opacity: 1;
  z-index: 5; }

/* Move overlay back to the right */
.nonBS-container.right-panel-active .overlay {
  transform: translateX(50%); }

.nonBS-container.nonBS-container.right-panel-active .overlay-left {
  transform: translateX(0); }

.nonBS-container.nonBS-container.right-panel-active .overlay-right {
  transform: translateX(20%); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(240, 223, 200, 0.8), rgba(235, 189, 163, 0.8)), url(../../img/plush-design-studio-l3N9Q27zULw-unsplash.jpg);
  background-size: cover;
  background-position: center;
  position: relative;
  /* clip-path is a property can be used to create a shape of an image */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* -50% says that it will be shifted 50% of the elements height to the top  */
    transform: translate(-50%, -50%);
    text-align: center; }
